// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Vite
// plugin that tells the Electron app where to look for the Vite-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_VITE_DEV_SERVER_URL: string;
declare const MAIN_WINDOW_VITE_NAME: string;

// Preload types
interface ThemeModeContext {
  toggle: () => Promise<boolean>;
  dark: () => Promise<void>;
  light: () => Promise<void>;
  system: () => Promise<boolean>;
  current: () => Promise<"dark" | "light" | "system">;
}
interface ElectronWindow {
  minimize: () => Promise<void>;
  maximize: () => Promise<void>;
  close: () => Promise<void>;
}

interface OllamaModel {
  name: string;
  modified_at: string;
  size: number;
}

interface RecordingContext {
  transcribeAudio: (audioBuffer: ArrayBuffer) => Promise<string>;
  summarizeTranscript: (transcript: string, model?: string) => Promise<string>;
  getOllamaModels: () => Promise<OllamaModel[]>;
}

interface GPUInfo {
  vram: number; // VRAM in bytes
  name: string;
}

interface SystemInfoContext {
  getGPUVRAM: () => Promise<GPUInfo | null>;
}

declare interface Window {
  themeMode: ThemeModeContext;
  electronWindow: ElectronWindow;
  recording: RecordingContext;
  systemInfo: SystemInfoContext;
}
